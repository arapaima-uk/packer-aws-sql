{
    "variables": {
      "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
      "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
      "region":         "eu-west-2"
    },
    "builders": [
      {
        "type": "amazon-ebs",
        "access_key": "{{ user `aws_access_key` }}",
        "secret_key": "{{ user `aws_secret_key` }}",
        "region": "{{ user `region` }}",
        "instance_type": "t3.large",
        "iam_instance_profile": "packer-role",
        "source_ami_filter": {
          "filters": {
            "virtualization-type": "hvm",
            "name": "Windows_Server-2019-English-Core-Base*",
            "root-device-type": "ebs"
          },
          "most_recent": true,
          "owners": "amazon"
        },
        "ami_name": "packer-sql-developer-{{timestamp}}",
        "user_data_file": "./user_data_boilerplate.txt",
        "communicator": "winrm",
        "winrm_username": "Administrator"
        
      }
    ],
    "provisioners": [
      {
        "type": "powershell",
        
        "inline": [
          "Read-S3Object -BucketName sql-server-install-media -KeyPrefix en_sql_server_2017_developer_x64_dvd_11296168 -Folder C:\\InstallMedia"

        ]
      },
      {
        "type": "powershell",
        "inline": [
          "Install-PackageProvider NuGet -Force -Scope CurrentUser",
          "Import-PackageProvider NuGet -Force" ,
          "Set-PSRepository -Name PSGallery -InstallationPolicy Trusted",
          "Install-Module -Name SqlServerDsc",
          "New-Item -Type Directory -Path C:\\Scripts"
        ]
      },
      {
        "type": "file",
        "source": "scripts/",
        "destination": "C:\\Scripts"

      },
      {
        "type": "powershell",
        "environment_vars": "WINRMPASS={{.WinRMPassword}}", 
        "inline":[
          "Set-Location C:\\Scripts",
          "$creds = New-Object System.Management.Automation.PSCredential ('Administrator', $(ConvertTo-SecureString $Env:WINRMPASS -AsPlainText -Force))",
          ". .\\sqlInstallDsc.ps1 -dscCredential $creds",
          "SQLInstall",
          "Start-DscConfiguration -Path SQLInstall -Wait -Force -Verbose",
          "Test-DscConfiguration",
          "Get-Service -Name *SQL*"

        ]
      },
      {
        "type": "powershell",
        "inline": [
          "C:/ProgramData/Amazon/EC2-Windows/Launch/Scripts/InitializeInstance.ps1 -Schedule",
          "C:/ProgramData/Amazon/EC2-Windows/Launch/Scripts/SysprepInstance.ps1 -NoShutdown"
        ]
    
      }

    ]
  }